name: publish to npm
on:
  release:
    types: [created, edited]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_EXTERNAL_AUTH_TOKEN }}    
    steps:
     - uses: actions/checkout@v2
     - uses: actions/setup-node@v1
       with:
        node-version: '12'
        registry-url: 'https://registry.npmjs.org/'
     # Publish mulesoft extension to npm with release tag version.    
     - run: |
        export EXTENSION=$(echo "${GITHUB_REF##*/}" | awk -F'_' '{print $2}')
        if [ -z "$EXTENSION" ] || [ "$EXTENSION" == "mulesoft" ]; then           
        cd mulesoft/mulesoft-extension
        echo //registry.npmjs.org/:_authToken="${NODE_AUTH_TOKEN}" >> .npmrc
        npm version "${GITHUB_REF##*/}" --no-git-tag-version 
        yarn && yarn build
        npm publish  --tag latest --access public
        fi
     # Publish swaggerhub extension to npm with release tag version.    
     - run: |
        export EXTENSION=$(echo "${GITHUB_REF##*/}" | awk -F'_' '{print $2}')
        if [ -z "$EXTENSION" ] || [ "$EXTENSION" == "swaggerhub" ]; then           
        cd swaggerhub/swaggerhub-extension
        echo //registry.npmjs.org/:_authToken="${NODE_AUTH_TOKEN}" >> .npmrc
        npm version "${GITHUB_REF##*/}" --no-git-tag-version 
        yarn && yarn build
        npm publish  --tag latest --access public
        fi
     # Publish github extension to npm with release tag version.    
     - run: |
        export EXTENSION=$(echo "${GITHUB_REF##*/}" | awk -F'_' '{print $2}')
        if [ -z "$EXTENSION" ] || [ "$EXTENSION" == "github" ]; then                   
        cd github/github-extension
        echo //registry.npmjs.org/:_authToken="${NODE_AUTH_TOKEN}" >> .npmrc
        npm version "${GITHUB_REF##*/}" --no-git-tag-version 
        yarn && yarn build
        npm publish  --tag latest --access public
        fi
     # Publish azure extension to npm with release tag version.    
     - run: |       
        export EXTENSION=$(echo "${GITHUB_REF##*/}" | awk -F'_' '{print $2}')
        if [ -z "$EXTENSION" ] || [ "$EXTENSION" == "azure" ]; then            
        cd azure/azure-extension
        echo //registry.npmjs.org/:_authToken="${NODE_AUTH_TOKEN}" >> .npmrc
        npm version "${GITHUB_REF##*/}" --no-git-tag-version 
        yarn && yarn build
        npm publish  --tag latest --access public
        fi
     # Publish apigee extension to npm with release tag version.    
     - run: |           
        export EXTENSION=$(echo "${GITHUB_REF##*/}" | awk -F'_' '{print $2}')
        if [ -z "$EXTENSION" ] || [ "$EXTENSION" == "apigee" ]; then        
        cd apigee/apigee-extension
        echo //registry.npmjs.org/:_authToken="${NODE_AUTH_TOKEN}" >> .npmrc
        npm version "${GITHUB_REF##*/}" --no-git-tag-version 
        yarn && yarn build
        npm publish  --tag latest --access public      
        fi 
     # Publish bitbucket extension to npm with release tag version.    
     - run: |           
        export EXTENSION=$(echo "${GITHUB_REF##*/}" | awk -F'_' '{print $2}')
        if [ -z "$EXTENSION" ] || [ "$EXTENSION" == "bitbucket" ]; then        
        cd bitbucket/bitbucket-extension
        echo //registry.npmjs.org/:_authToken="${NODE_AUTH_TOKEN}" >> .npmrc
        npm version "${GITHUB_REF##*/}" --no-git-tag-version 
        yarn && yarn build
        npm publish  --tag latest --access public      
        fi
     # Publish layer7 extension to npm with release tag version.    
     - run: |           
        export EXTENSION=$(echo "${GITHUB_REF##*/}" | awk -F'_' '{print $2}')
        if [ -z "$EXTENSION" ] || [ "$EXTENSION" == "layer7" ]; then        
        cd layer7/layer7-extension
        echo //registry.npmjs.org/:_authToken="${NODE_AUTH_TOKEN}" >> .npmrc
        npm version "${GITHUB_REF##*/}" --no-git-tag-version 
        yarn && yarn build
        npm publish  --tag latest --access public      
        fi
        
